object
=======
It is a outcome of a blue print.

It is a instance of a class.

Here instance means allocating memory for our data members.

It is a physical entity.

It is a collection of properties and behaviours.

Realtime example
-----------------

			Dog (object)
			|
	|--------------------------------|
properties				behaviours 

> Name					> Eating 
> Age					> Barking 
> Breed 				> Sleeping
> Height 				> Running
> Width 				and etc.
> Color 
and etc.

Memory space will be allocated when we create an object.

It is possible to create more then one object in a single class.

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		Test t1=new Test();
		Test t2=new Test();
		Test t3=new Test();
		
		System.out.println(t1.hashCode());
		System.out.println(t2.hashCode());
		System.out.println(t3.hashCode());
		
		System.out.println(t1); //Test@Hexadecimal
		System.out.println(t2.toString());
		System.out.println(t3.toString());
	}
}


Q) What is hash code in java?

For every object, JVM will create a unique identification number i.e hash code.

In order to read the hash code of an object we need to use hashCode() method of Object class.

Diagram: java27.1


Q) What is toString() method?

It is a method present in Object class.

Whenever we are trying to display any object reference. Directly or indirectly toString() method will be executed.



Q) What is Object class?

Object class present in java.lang package.

It is a parent class for every java class.

What ever the properties are present in Object class that can be inherit by child classes.

Object class contains following methods.

ex:
	cmd> javap   java.lang.Object 

	hashCode()
	toString()
	getClass()
	clone()
	notify()
	notifyAll()
	wait()
	and etc.



Q) What is the difference between a class and object ?

class						object
----------------				-----------
To declare a class we will use class keyword.	To declare an object we will use new keyword.

It is a blueprint of an object.			It is a outcome of a blueprint.

It is a collection of objects.			It is a collection of properties & behaviourse.

It is a logical entity.				It is a physical entity.

It is declared once.				It is declared more then once.

It does not allocate the memory.		It allocates the memory.

We can't manipulate.				We can manipulate.



Data Hiding
===========
It is a technique of hiding object data from outsiders.

Using private modifier we can achieve data hiding.

The main objective of data hiding is to provide security.

ex:
---
class Account 
{
	private double balance=10000d;
}
class Test
{
	public static void main(String[] args)
	{
		Account account=new Account();
		System.out.println(account.balance); // 10000
	}
}
	

Our internal data should not go out directly.It means outside person must not access our data directly.


Abstraction
============
The process of hiding internal implementation and highlighting the set of services is called abstraction.

Using abstract classes and interfaces we can implements abstraction.

The best example of abstraction is GUI ATM machine. Where bank people will hide internal implementation and highlights the set of services like Banking, Withdrawl, MiniStatement and etc.

The main advantages of abstraction are 

1) It gives security because it will hide internal implementation.

2) Enhancement becomes more easy because without effecting enduser they can perform many changes 
   in our internal system.

3) It provides flexibility to the enduser to use the system.

4) It improves maintainability of an application.

Ecapsulation 
=============
The process of encapsulating or grouping variables and it's associate methods in a single entity
is called encapsulation.

Encapsulation is used to protect the data.

Diagram: java27.2

A class is said to be encapsulated class if it supports data hiding and abstraction.

In encapsulation for every variable we need to declare setter and getter methods.

Diagram: java27.3

The main advantages of encapsulation are

1) It gives security.

2) Enhancement becomes more easy.

3) It provides flexibility to the enduser to use the system.

4) It improves maintainability of an application.

The main disadvantage of encapsulation is , it will increase the length of our code and slow down the execution process.

ex:
---




































