Q)Write a java program to display pascal triangle?

	1
       1 1
      1 2 1
     1 3 3 1
    1 4 6 4 1 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=0;i<5;i++)
		{
			//spaces
			for(int j=1;j<5-i;j++)
			{
				System.out.print(" ");
			}
			
			int number=1;
			for(int k=0;k<=i;k++)
			{
				System.out.print(number+" ");
				number = number * (i-k)/(k+1);
			}
			
			//new line
			System.out.println();
		}
	}
}

Q) Write a java program to display pyramid loop pattern?

	*
       * *
      * * *
     * * * *
    * * * * * 

class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=0;i<5;i++)
		{
			//spaces
			for(int j=1;j<5-i;j++)
			{
				System.out.print(" ");
			}
			
			for(int k=0;k<=i;k++)
			{
				System.out.print("* ");
			}
			
			//new line
			System.out.println();
		}
	}
}
	

4) Jump Statements
==================
Jump statements are used to jump from one section of code to another section.

We have two types of jump statements.

i) break stmt 

ii) continue stmt 


i) break stmt 
-------------
A break statement is used to break the execution of loops and switch case.

For conditional statements we can use if condition.

syntax:
		break; 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		break;
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E : break outside switch or loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		if(true)
		{
			break;
		}
		System.out.println("stmt2");
	}
}

o/p:
	C.T.E : break outside switch or loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				break;
			}
			System.out.print(i+" ");//1 2 3 4 
		}
	}
}

ii) continue stmt 
------------------
It is used to continue the execution of loops.

For conditional statement we can use if condition.

syntax:
	continue;

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		continue;
		
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E : continue outside of loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		
		if(true)
		{
			continue;
		}
		System.out.println("stmt2");
	}
}


o/p:
	C.T.E : continue outside of loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				continue;
			}
			
			System.out.print(i+" ");//1 2 3 4 6 7 8 9 10
		}
	}
}


Various ways to declare methods in java
=======================================
There are four ways to declare methods in java.

1) No returntype with No argument method 

2) No returntype with Argument method 

3) With returntyppe with No argument method 

4) With returntype with Argument method 


1) No returntype with No argument method 
----------------------------------------
If we don't have arguments then we need to ask input values inside callie method.


Q) Write a java program to display sum of two numbers using no returntype with no argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		sum();
	}
	//callie method 
	public static void sum()
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();//10
		System.out.println("Enter the second number :");
		int b=sc.nextInt();//20
		
		int c=a+b;
		System.out.println("sum of two numbers is ="+c);
	}
}


Q) Write a java program to find out factorial of a given number using no return type with no argument method?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		factorial();
	}
	//callie method 
	public static void factorial()
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt(); //5
		
		int fact=1;
		for(int i=n;i>=1;i--)
		{
			fact*=i;
		}
		
		System.out.println("Factorial of a given number is ="+fact);
	}
}

2) No returntype with Argument method 
-------------------------------------
If we have arguments then we need to ask input values inside main method.

Number of arguments are depends upon number of inputs.


Q) Write a java program to perform sum of two numbers using no returntype with argument method?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		System.out.println("Enter the second number :");
		int b=sc.nextInt();
		
		//caller method 
		sum(a,b);
	}
	//callie method 
	public static void sum(int a,int b)
	{
		int c=a+b;
		System.out.println("sum of two numbers is ="+c);
	}
}


Q) Write a java program to display reverse of a given number using no returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt(); //123
		
		//caller method
		reverse(n);
	}
	//callie method 
	public static void reverse(int n)
	{
		while(n>0)
		{
			switch(n%10)
			{
				case 0: System.out.print("Zero"); break;
				case 1: System.out.print("One"); break;
				case 2: System.out.print("Two"); break;
				case 3: System.out.print("Three"); break;
				case 4: System.out.print("Four"); break;
				case 5: System.out.print("Five"); break;
				case 6: System.out.print("Six"); break;
				case 7: System.out.print("Seven"); break;
				case 8: System.out.print("Eight"); break;
				case 9: System.out.print("Nine"); break;
			}
			n=n/10;
		}
	}
}


Assignment
==========
Q) Write a java program to check given number is palindrome or not?































































