iv) nested if stmt 
==================
If declare if stmt inside another if stmt is called nested if stmt.

syntax:
------
	if(condition)
	{
		if(condition)
		{
			-
			- //code to be execute 
			-	
		}
	}

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(5>2)
		{
			System.out.println("stmt2");
			
			if(true)
			{
				System.out.println("stmt3");
			}
			
			System.out.println("stmt4");
		}
		System.out.println("stmt5");
	}
}
o/p:
	stmt1
	stmt2
	stmt3
	stmt4
	stmt5


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(5>20)
		{
			System.out.println("stmt2");
			
			if(true)
			{
				System.out.println("stmt3");
			}
			
			System.out.println("stmt4");
		}
		System.out.println("stmt5");
	}
}
o/p:
	stmt1
	stmt5

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(5>2)
		{
			System.out.println("stmt2");
			
			if(false)
			{
				System.out.println("stmt3");
			}
			
			System.out.println("stmt4");
		}
		System.out.println("stmt5");
	}
}
o/p:
	stmt1
	stmt2
	stmt4
	stmt5


Q) Write a java program to find out given number is +ve or -ve using nested if stmt ?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		if(n!=0)
		{
			if(n>0)
			{
				System.out.println("It is positive number");
				System.exit(0);
			}
			
			System.out.println("It is negative number");
		}
	}
}

2) Selection statement
======================

switch
=======
It will execute the source code based on multiple conditions.

It is similar to if else if ladder.

syntax:
------
	switch(condition)
	{
		case value1:  //code to be execute
			      break stmt;

		case value2:  //code to be execute
			      break stmt;
		-
		-
		default:  //code to be execute if all cases are false.

	}

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the option :");
		int option=sc.nextInt();
		
		switch(option)
		{
			case 100: System.out.println("It is a police number");
					  break;
			case 103: System.out.println("It is a enquiry number");
					  break;
			case 108: System.out.println("It is a emergency number");
					  break;
			default:  System.out.println("Invalid option");
		}
		
		
	}
}

Declaration of break stmt is optional.If won't declare break stmt then from where our condition is satisfied from there all cases will be executed.That state is called fall through state of switch case.

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the option :");
		int option=sc.nextInt();
		
		switch(option)
		{
			case 100: System.out.println("It is a police number");
					  //break;
			case 103: System.out.println("It is a enquiry number");
					  //break;
			case 108: System.out.println("It is a emergency number");
					  //break;
			default:  System.out.println("Invalid option");
		}
		
		
	}
}

The allowed datatype of switch case are byte,short,int,char and String.


Q) Write a java program to find out given alphabet is a vowel or consonent?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the alphabet :");
		char ch=sc.next().charAt(0);
		
		switch(ch)
		{
			case 'a': System.out.println("It is a vowel"); break;
			case 'e': System.out.println("It is a vowel"); break;
			case 'i': System.out.println("It is a vowel"); break;
			case 'o': System.out.println("It is a vowel"); break;
			case 'u' : System.out.println("It is a vowel"); break;
			default:  System.out.println("It is a consonent");
		}
		
		
	}
}

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the string :");
		String str=sc.next();
		
		switch(str)
		{
			case "one": System.out.println("January"); break;
			case "two": System.out.println("February"); break;
			case "three": System.out.println("March"); break;
			case "four": System.out.println("April"); break;
			case "five" : System.out.println("May"); break;
			default:  System.out.println("Coming Soon...");
		}
		
		
	}
}

3) Iteration Statement
======================
Iteration statement is used to execute the source code repeatedly.

Iterataion statement is possible by using LOOPs.

We have four types of loops.

i) do while loop

ii) while loop

iii) for loop 

iv) for each loop


i) do while loop
-----------------
It will execute the source code untill our condition is true.

syntax:
-----
	do 
	{
		-
		- //code to be execute 
		-
	}while(condition);


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int i=1;
		do
		{
			System.out.print(i+" "); //  infinite 1 
		}
		while(i<=10);
	}
}

In do while loop, our code will execute atleast for one time either our condition is true or false.

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int i=11;
		do
		{
			System.out.print(i+" "); //11
		}
		while(i<=10);
	}
}

Q) Write a java program to display 10 natural numbers?

natural numbers : 1 2 3 4 5 6 7 8 9 10


class Test  
{
	public static void main(String[] args) 
	{
		int i=1;
		do
		{
			System.out.print(i+" "); //1 2 3 4 5 6 7 8 9 10
			i++;
		}
		while (i<=10);
	}
}

Q) Write a java program to display 10 natural numbers in descending order?

class Test  
{
	public static void main(String[] args) 
	{
		int i=10;
		do
		{
			System.out.print(i+" "); //10 9 8 7 6 5 4 3 2 1 
			i--;
		}
		while (i>=1);
	}
}

Q) Write a java program to perform sum of 10 natural numbers?

output:
	1+2+3+4+5+6+7+8+9+10 = 55

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int i=1,sum=0;
		do
		{
			sum=sum+i;
			i++;
		}
		while (i<=10);
		
		System.out.println(sum);
	}
}

Q) Write a java program to find out factorial of a given number?

input:
	n=5

output:
	120 (5*4*3*2*1)


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		int i=n,fact=1;
		do
		{
			fact = fact * i;
			i--;
		}
		while (i>=1);
		
		System.out.println(fact);
	}
}

Q) Write a java program to display multiplication table of a given number?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		int i=1;
		do
		{
			System.out.println(n+" * "+i+" = "+n*i);
			i++;
		}
		while (i<=10);
	}
}


ii) while loop
==============
It will execute the source code untill our condition is true.

syntax:
------
	while(condition)
	{
		-
		- //code to be execute 
		-
	}

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int i=1;
		
		while(i<=10)
		{
			System.out.print(i+" "); // infinite 1
		}
	}
}

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int i=11;
		
		while(i<=10)
		{
			System.out.print(i+" "); // nothing 
		}
	}
}

Q) Write a java program to display 100 natural numbers?

class Test  
{
	public static void main(String[] args) 
	{
		int i=1;
		while(i<=100)
		{
			System.out.print(i+" "); // 1 2 3 ... 100
			i++;
		}
	}
}

Q) Write a java program to display sum of 10 natural numbers?

class Test  
{
	public static void main(String[] args) 
	{
		int i=1,sum=0;
		
		while(i<=10)
		{
			sum=sum+i;
			i++;
		}
		
		System.out.println(sum);
	}
}


Q) Write a java program to find out factorial of a given number?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		int i=n,fact=1;
		while(i>=1)
		{
			fact=fact*i;
			i--;
		}
		System.out.println(fact);
	}
}

Q) Write a java program to display multiplication table of a given number?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		int i=1;
		while(i<=10)
		{
			System.out.println(n+" * "+i+" = "+n*i);
			i++;
		}
	}
}










































































































































